properties_export = properties_export[!is.na(properties_export$latitude),]
properties_filename = paste(year,"_properties_export_",as.Date(Sys.Date()),".csv",collapse="", sep="")
write.csv(properties_export, properties_filename)
View(owners_properties)
library("tidyverse")
library("lubridate")
library("readxl")
import_file_blotter = "sm_fire_ems_blotter_2018.csv"
year = "2018"
original_blotter = read_csv(import_file_blotter)
original_blotter = original_blotter[,2:5]
original_blotter = original_blotter[!is.na(original_blotter[,1]),]
colnames(original_blotter) = c("datetime","description","address","location_type")
original_blotter$datetime = mdy_hms(original_blotter$datetime)
original_blotter$address = gsub("/", " and ", original_blotter$address)
original_blotter$address = sapply(original_blotter$address, function(x) {
paste(x, ", San Marcos TX", sep="", collapse="" )
})
library("ggmap")
register_google("AIzaSyB0TJpE_2VnVyteAo8NC1MjZT9g-1jdPFI ")
unique_addresses = unique(original_blotter$address)
# Careful - the next line(s) can cost money. Think before running.
unique_lat_lon_1 = geocode(unique_addresses[1:1000])
#unique_lat_lon_2 = geocode(unique_addresses[1001:2000])
#unique_lat_lon_3 = geocode(unique_addresses[2001:3000])
#unique_lat_lon_4 = geocode(unique_addresses[3001:4000])
#unique_lat_lon_5 = geocode(unique_addresses[4001:5000])
#unique_lat_lon_6 = geocode(unique_addresses[5001:length(unique_addresses)])
# Careful - the next line(s) can cost money. Think before running.
#unique_lat_lon_1 = geocode(unique_addresses[1:1000])
unique_lat_lon_2 = geocode(unique_addresses[1001:length(unique_addresses)])
unique_lat_long = rbind(unique_lat_lon_1, unique_lat_lon_2)
addresses_lon_lat = as.data.frame(cbind(unique_addresses, unique_lat_lon$lon, unique_lat_lon$lat))
unique_lat_long = rbind(unique_lat_lon_1, unique_lat_lon_2)
addresses_lon_lat = as.data.frame(cbind(unique_addresses, unique_lat_lon$lon, unique_lat_lon$lat))
unique_lat_lon = rbind(unique_lat_lon_1, unique_lat_lon_2)
addresses_lon_lat = as.data.frame(cbind(unique_addresses, unique_lat_lon$lon, unique_lat_lon$lat))
colnames(addresses_lon_lat) = c("address","lon","lat")
addresses_lon_lat$address = as.character(addresses_lon_lat$address)
addresses_lon_lat$lon = as.numeric(as.character(addresses_lon_lat$lon))
addresses_lon_lat$lat = as.numeric(as.character(addresses_lon_lat$lat))
fire_ems_reports = merge(original_blotter, addresses_lon_lat, by.y ="address", by.x ="address" )
?grepl
ems_reports = fire_ems_reports[grepl("$ems",fire_ems_reports$description),]
ems_reports = fire_ems_reports[grepl("^ems",fire_ems_reports$description),]
ems_reports = fire_ems_reports[grepl("^ems",fire_ems_reports$description, ignore.case = TRUE),]
ems_reports = fire_ems_reports[grepl("^ems",fire_ems_reports$description, ignore.case = TRUE),]
fire_reports = fire_ems_reports[!grepl("^ems",fire_ems_reports$description, ignore.case = TRUE),]
nrow(fire_reports)
nrow(fire_reports) + nrow(ems_reports)
fire_report_filename = paste(year,"_fire_reports_export_",as.Date(Sys.Date()),".csv",collapse="", sep="")
write.csv(fire_reports, fire_report_filename)
ems_report_filename = paste(year,"_ems_reports_export_",as.Date(Sys.Date()),".csv",collapse="", sep="")
write.csv(ems_reports, ems_report_filename)
load("~/Academics/Projects/collegehousingproject_scripts/20190607_process_appraisal_district_2019_V2.RData")
View(original_land)
load("~/Academics/Projects/2017_freebie_mom/scripts/posts_comments_regression.RData")
load("~/Academics/Projects/2017_freebie_mom/scripts/posts_comments_regression.RData")
load("~/Academics/Projects/2017_freebie_mom/scripts/freebiemom_sampling.RData")
View(coding)
knitr::opts_chunk$set(cache = TRUE)
library("tidyverse")
library("readxl")
import_file_land = "2019_PropertyDataExport735288.txt"
import_file_properties = "2019_PropertyDataExport735286.txt"
import_file_owners = "2019_PropertyDataExport735287.txt"
year = "2019"
original_land = read_csv(import_file_land)
original_properties = read_csv(import_file_properties)
original_land_b1 = original_land[original_land$LandType == "B1",]
properties = merge(original_land_b1, original_properties, by.x = "PropertyID", by.y = "PropertyID")
tmp_705_w_river_rd = properties[grepl('705 w river rd', properties$Situs, ignore.case = TRUE),]
merged_705_w_river_rd = tmp_705_w_river_rd[1,]
merged_705_w_river_rd$CurrMarketValue = sum(tmp_705_w_river_rd$CurrMarketValue)
properties = properties[!grepl('705 w river rd', properties$Situs, ignore.case = TRUE),]
properties = rbind(properties, merged_705_w_river_rd)
tmp_800_n_lbj = properties[grepl('treehouse apts', properties$SitusLocation, ignore.case = TRUE),]
merged_800_n_lbj = tmp_800_n_lbj[1,]
merged_800_n_lbj$CurrMarketValue = sum(tmp_800_n_lbj$CurrMarketValue)
merged_800_n_lbj$Situs = "800 N LBJ DR, SAN MARCOS, TX 78666"
properties = properties[!grepl('treehouse apts', properties$SitusLocation, ignore.case = TRUE),]
properties = rbind(properties, merged_800_n_lbj)
properties[grepl('treehouse apts', properties$SitusLocation, ignore.case = TRUE),]$CurrMarketValue = properties[grepl('treehouse apts', properties$SitusLocation, ignore.case = TRUE),]$CurrMarketValue + properties[properties$PropertyID == 84811,]$CurrMarketValue
properties = properties[properties$PropertyID != 84811,]
properties[grepl('1506 S IH 35', properties$Situs, ignore.case = TRUE),]$CurrMarketValue = properties[grepl('1506 S IH 35', properties$Situs, ignore.case = TRUE),]$CurrMarketValue + properties[properties$PropertyID == 118256,]$CurrMarketValue
properties = properties[properties$PropertyID != 118256,]
### Zeta Tau Alpha sorority
properties = properties[!grepl('102 MOSSCLIFF CIR', properties$Situs, ignore.case = TRUE),]
### No improvements on land
properties = properties[!grepl('1408 MARLETON ST', properties$Situs, ignore.case = TRUE),]
### Alpha Zeta sorority?
properties = properties[!grepl('428 W HUTCHISON ST', properties$Situs, ignore.case = TRUE),]
### Vacant lot?
properties = properties[!grepl('745 RIVER RD', properties$Situs, ignore.case = TRUE),]
properties[grepl('1271 SADLER', properties$Situs, ignore.case = TRUE),]$SitusLocation = "SADLER HOUSE APARTMENTS"
properties[grepl('1271 SADLER', properties$Situs, ignore.case = TRUE),]$Situs = "1271 SADLER DR, SAN MARCOS, TX 78666"
properties[grepl('417 N COMANCHE ST', properties$Situs, ignore.case = TRUE),]$SitusLocation = "POINTE SAN MARCOS"
properties[grepl('755 RIVER RD', properties$Situs, ignore.case = TRUE),]$SitusLocation = "RIVER ROAD APARTMENTS"
properties = properties[,c("QuickRefID.x","Situs","SitusLocation","PropertyID","PropertyNumber.x","Description","StateCode","CurrMarketValue")]
properties = properties[grepl("^.* 78666", properties$Situs),]
properties_no_address = properties[is.na(properties$Situs),]
properties = properties[!is.na(properties$Situs),]
library("ggmap")
register_google("AIzaSyB0TJpE_2VnVyteAo8NC1MjZT9g-1jdPFI ")
unique_addresses = unique(properties$Situs)
unique_lat_lon = geocode(unique_addresses)
addresses_lon_lat = as.data.frame(cbind(unique_addresses, unique_lat_lon$lon, unique_lat_lon$lat))
colnames(addresses_lon_lat) = c("address","lon","lat")
addresses_lon_lat$address = as.character(addresses_lon_lat$address)
addresses_lon_lat$lon = as.numeric(as.character(addresses_lon_lat$lon))
addresses_lon_lat$lat = as.numeric(as.character(addresses_lon_lat$lat))
properties = merge(properties, addresses_lon_lat, by.y ="address", by.x ="Situs" )
original_owners = read_csv(import_file_owners)
owners_properties = merge(properties, original_owners, by.x = "PropertyNumber.x", by.y = "PropertyNumber", all.x = TRUE, no.dups = FALSE )
owners_properties = unique(owners_properties)
owners_properties[grepl("1701 MILL ST",owners_properties$Situs, ignore.case = TRUE),]$OwnerName = "COPPER BEECH TOWNHOME COMMUNITIES"
owners_properties[grepl("1701 MILL ST",owners_properties$Situs, ignore.case = TRUE),]$SitusLocation = "COPPER BEECH"
library(dplyr)
multiple_owners_multiple_properties = owners_properties %>% group_by(Situs) %>% filter (n() > 1)
multiple_owners_flag = FALSE
if ( length(unique(multiple_owners_multiple_properties$OwnerName)) != length(unique(multiple_owners_multiple_properties$Situs)) ) {
multiple_owners_flag = TRUE
}
owners_properties = owners_properties %>% group_by(Situs) %>% summarise(
ref_id = first(QuickRefID.x),
SitusLocation = first(SitusLocation),
CurrMarketValue = sum(CurrMarketValue),
lon = first(lon),
lat = first(lat),
OwnerName = first(OwnerName),
Address1 = first(Address1),
Address2 = first(Address2),
Address3 = first(Address3),
City = first(City),
State = first(State),
Zip = first(Zip),
OwnershipPercent = first(OwnershipPercent)
)
properties_export = owners_properties[,c("Situs","SitusLocation","lon","lat","CurrMarketValue", "OwnerName", "Address1","Address2","Address3","City","State","Zip","OwnershipPercent")]
properties_export$year = year
colnames(properties_export) = c("address_canonical","property_name","longitude","latitude","value","owner_name","owner_address_1","owner_address_2","owner_address_3","owner_city","owner_state","owner_zip","ownership_percent","year")
properties_export = properties_export[!is.na(properties_export$latitude),]
properties_filename = paste(year,"_properties_export_",as.Date(Sys.Date()),".csv",collapse="", sep="")
write.csv(properties_export, properties_filename, row.names = FALSE)
unique_addresses = unique(unique_addresses)
unique_addresses_simple = unlist(lapply(unique_addresses, function(x) { unlist(strsplit(x, ",", fixed=TRUE))[1] }))
unique_address_filename = paste(year,"_unique_property_addresses",as.Date(Sys.Date()),".csv",collapse="", sep="")
unique_addresses = cbind(unique_addresses, unique_addresses_simple)
colnames(unique_addresses) = c("address_full","address_simple")
write.csv(unique_addresses, unique_address_filename, row.names = FALSE)
View(properties_export)
save.image("~/Academics/Projects/collegehousingproject_scripts_V2/2018/20200122_process_appraisal_district_2019.RData")
View(properties)
original_land[original_land$QuickRefID == "R41455",]
original_properties[original_properties$PropertyId == "54964",]
original_properties[original_properties$PropertyID == "54964",]
tmp = original_properties[original_properties$PropertyID == "54964",]
View(tmp)
original_land[original_land$QuickRefID == "R41455",]
load("~/Academics/Projects/collegehousingproject_scripts_V2/2019/20200122_process_appraisal_district_2019.RData")
for_sample = owners_properties[owners_properties$CurrMarketValue >= 1000000,]
for_sample[sample(nrow(for_sample), 50),]
for_sample[sample(nrow(for_sample), 50),1:2]
?write.csv
write.csv( for_sample[sample(nrow(for_sample), 50),1:2], "20200123_coding_sample.csv")
setwd("~/Academics/Projects/collegehousingproject_scripts_V2/2019")
setwd("~/Academics/Projects/collegehousingproject_scripts_V2/2019")
write.csv( for_sample[sample(nrow(for_sample), 50),1:2], "20200123_coding_sample.csv")
write.csv( for_sample[sample(nrow(for_sample), 50)], "20200123_coding_sample.csv", row.names = FALSE)
write.csv( for_sample[sample(nrow(for_sample), 50),], "20200123_coding_sample.csv", row.names = FALSE)
knitr::opts_chunk$set(cache = TRUE)
library("tidyverse")
library("readxl")
import_file_land = "2019_PropertyDataExport735288.txt"
import_file_properties = "2019_PropertyDataExport735286.txt"
import_file_owners = "2019_PropertyDataExport735287.txt"
year = "2019"
original_land = read_csv(import_file_land)
original_properties = read_csv(import_file_properties)
original_land_b1 = original_land[original_land$StateCode == "B1",]
#original_land_b1 = original_land[original_land$LandType == "B1",]
properties = merge(original_land_b1, original_properties, by.x = "PropertyID", by.y = "PropertyID")
tmp_705_w_river_rd = properties[grepl('705 w river rd', properties$Situs, ignore.case = TRUE),]
merged_705_w_river_rd = tmp_705_w_river_rd[1,]
merged_705_w_river_rd$CurrMarketValue = sum(tmp_705_w_river_rd$CurrMarketValue)
properties = properties[!grepl('705 w river rd', properties$Situs, ignore.case = TRUE),]
properties = rbind(properties, merged_705_w_river_rd)
tmp_800_n_lbj = properties[grepl('treehouse apts', properties$SitusLocation, ignore.case = TRUE),]
merged_800_n_lbj = tmp_800_n_lbj[1,]
merged_800_n_lbj$CurrMarketValue = sum(tmp_800_n_lbj$CurrMarketValue)
merged_800_n_lbj$Situs = "800 N LBJ DR, SAN MARCOS, TX 78666"
properties = properties[!grepl('treehouse apts', properties$SitusLocation, ignore.case = TRUE),]
properties = rbind(properties, merged_800_n_lbj)
properties[grepl('treehouse apts', properties$SitusLocation, ignore.case = TRUE),]$CurrMarketValue = properties[grepl('treehouse apts', properties$SitusLocation, ignore.case = TRUE),]$CurrMarketValue + properties[properties$PropertyID == 84811,]$CurrMarketValue
properties = properties[properties$PropertyID != 84811,]
properties[grepl('1506 S IH 35', properties$Situs, ignore.case = TRUE),]$CurrMarketValue = properties[grepl('1506 S IH 35', properties$Situs, ignore.case = TRUE),]$CurrMarketValue + properties[properties$PropertyID == 118256,]$CurrMarketValue
properties = properties[properties$PropertyID != 118256,]
### Zeta Tau Alpha sorority
properties = properties[!grepl('102 MOSSCLIFF CIR', properties$Situs, ignore.case = TRUE),]
### No improvements on land
properties = properties[!grepl('1408 MARLETON ST', properties$Situs, ignore.case = TRUE),]
### Alpha Zeta sorority?
properties = properties[!grepl('428 W HUTCHISON ST', properties$Situs, ignore.case = TRUE),]
### Vacant lot?
properties = properties[!grepl('745 RIVER RD', properties$Situs, ignore.case = TRUE),]
properties[grepl('1271 SADLER', properties$Situs, ignore.case = TRUE),]$SitusLocation = "SADLER HOUSE APARTMENTS"
properties[grepl('1271 SADLER', properties$Situs, ignore.case = TRUE),]$Situs = "1271 SADLER DR, SAN MARCOS, TX 78666"
properties[grepl('417 N COMANCHE ST', properties$Situs, ignore.case = TRUE),]$SitusLocation = "POINTE SAN MARCOS"
properties[grepl('755 RIVER RD', properties$Situs, ignore.case = TRUE),]$SitusLocation = "RIVER ROAD APARTMENTS"
properties = properties[,c("QuickRefID.x","Situs","SitusLocation","PropertyID","PropertyNumber.x","Description","StateCode","CurrMarketValue")]
properties = properties[grepl("^.* 78666", properties$Situs),]
properties_no_address = properties[is.na(properties$Situs),]
properties = properties[!is.na(properties$Situs),]
library("ggmap")
register_google("AIzaSyB0TJpE_2VnVyteAo8NC1MjZT9g-1jdPFI ")
unique_addresses = unique(properties$Situs)
unique_lat_lon = geocode(unique_addresses)
addresses_lon_lat = as.data.frame(cbind(unique_addresses, unique_lat_lon$lon, unique_lat_lon$lat))
colnames(addresses_lon_lat) = c("address","lon","lat")
addresses_lon_lat$address = as.character(addresses_lon_lat$address)
addresses_lon_lat$lon = as.numeric(as.character(addresses_lon_lat$lon))
addresses_lon_lat$lat = as.numeric(as.character(addresses_lon_lat$lat))
properties = merge(properties, addresses_lon_lat, by.y ="address", by.x ="Situs" )
original_owners = read_csv(import_file_owners)
owners_properties = merge(properties, original_owners, by.x = "PropertyNumber.x", by.y = "PropertyNumber", all.x = TRUE, no.dups = FALSE )
owners_properties = unique(owners_properties)
owners_properties[grepl("1701 MILL ST",owners_properties$Situs, ignore.case = TRUE),]$OwnerName = "COPPER BEECH TOWNHOME COMMUNITIES"
owners_properties[grepl("1701 MILL ST",owners_properties$Situs, ignore.case = TRUE),]$SitusLocation = "COPPER BEECH"
library(dplyr)
multiple_owners_multiple_properties = owners_properties %>% group_by(Situs) %>% filter (n() > 1)
multiple_owners_flag = FALSE
if ( length(unique(multiple_owners_multiple_properties$OwnerName)) != length(unique(multiple_owners_multiple_properties$Situs)) ) {
multiple_owners_flag = TRUE
}
owners_properties = owners_properties %>% group_by(Situs) %>% summarise(
ref_id = first(QuickRefID.x),
SitusLocation = first(SitusLocation),
CurrMarketValue = sum(CurrMarketValue),
lon = first(lon),
lat = first(lat),
OwnerName = first(OwnerName),
Address1 = first(Address1),
Address2 = first(Address2),
Address3 = first(Address3),
City = first(City),
State = first(State),
Zip = first(Zip),
OwnershipPercent = first(OwnershipPercent)
)
properties_export = owners_properties[,c("Situs","SitusLocation","lon","lat","CurrMarketValue", "OwnerName", "Address1","Address2","Address3","City","State","Zip","OwnershipPercent")]
properties_export$year = year
colnames(properties_export) = c("address_canonical","property_name","longitude","latitude","value","owner_name","owner_address_1","owner_address_2","owner_address_3","owner_city","owner_state","owner_zip","ownership_percent","year")
properties_export = properties_export[!is.na(properties_export$latitude),]
properties_filename = paste(year,"_properties_export_",as.Date(Sys.Date()),".csv",collapse="", sep="")
write.csv(properties_export, properties_filename, row.names = FALSE)
unique_addresses = unique(unique_addresses)
unique_addresses_simple = unlist(lapply(unique_addresses, function(x) { unlist(strsplit(x, ",", fixed=TRUE))[1] }))
unique_address_filename = paste(year,"_unique_property_addresses",as.Date(Sys.Date()),".csv",collapse="", sep="")
unique_addresses = cbind(unique_addresses, unique_addresses_simple)
colnames(unique_addresses) = c("address_full","address_simple")
write.csv(unique_addresses, unique_address_filename, row.names = FALSE)
?unique
original_state_b1 = original_land[original_land$StateCode == "B1",]
original_land_b1 = original_land[original_land$LandType == "B1",]
original_land_b1 = unique(rbind(original_state_b1, original_land_b1))
knitr::opts_chunk$set(cache = TRUE)
library("tidyverse")
library("readxl")
import_file_land = "2019_PropertyDataExport735288.txt"
import_file_properties = "2019_PropertyDataExport735286.txt"
import_file_owners = "2019_PropertyDataExport735287.txt"
year = "2019"
original_land = read_csv(import_file_land)
original_properties = read_csv(import_file_properties)
original_state_b1 = original_land[original_land$StateCode == "B1",]
original_land_b1 = original_land[original_land$LandType == "B1",]
original_land_b1 = unique(rbind(original_state_b1, original_land_b1))
properties = merge(original_land_b1, original_properties, by.x = "PropertyID", by.y = "PropertyID")
tmp_705_w_river_rd = properties[grepl('705 w river rd', properties$Situs, ignore.case = TRUE),]
merged_705_w_river_rd = tmp_705_w_river_rd[1,]
merged_705_w_river_rd$CurrMarketValue = sum(tmp_705_w_river_rd$CurrMarketValue)
properties = properties[!grepl('705 w river rd', properties$Situs, ignore.case = TRUE),]
properties = rbind(properties, merged_705_w_river_rd)
properties[grepl('stone brook', properties$SitusLocation, ignore.case = TRUE),]
properties = properties[!grepl('stone brook', properties$SitusLocation, ignore.case = TRUE),]
properties[grepl('R93286', properties$QuickRefID.y, ignore.case = TRUE),]
properties[grepl('la vista', properties$SitusLocation, ignore.case = TRUE),]
properties = properties[!grepl('R93286', properties$QuickRefID.y, ignore.case = TRUE),]
properties = properties[!grepl('R93223', properties$QuickRefID.y, ignore.case = TRUE),]
knitr::opts_chunk$set(cache = TRUE)
library("tidyverse")
library("readxl")
import_file_land = "2019_PropertyDataExport735288.txt"
import_file_properties = "2019_PropertyDataExport735286.txt"
import_file_owners = "2019_PropertyDataExport735287.txt"
year = "2019"
original_land = read_csv(import_file_land)
original_properties = read_csv(import_file_properties)
original_state_b1 = original_land[original_land$StateCode == "B1",]
original_land_b1 = original_land[original_land$LandType == "B1",]
original_land_b1 = unique(rbind(original_state_b1, original_land_b1))
properties = merge(original_land_b1, original_properties, by.x = "PropertyID", by.y = "PropertyID")
tmp_705_w_river_rd = properties[grepl('705 w river rd', properties$Situs, ignore.case = TRUE),]
merged_705_w_river_rd = tmp_705_w_river_rd[1,]
merged_705_w_river_rd$CurrMarketValue = sum(tmp_705_w_river_rd$CurrMarketValue)
properties = properties[!grepl('705 w river rd', properties$Situs, ignore.case = TRUE),]
properties = rbind(properties, merged_705_w_river_rd)
properties = properties[!grepl('R93286', properties$QuickRefID.y, ignore.case = TRUE),]
properties = properties[!grepl('R93223', properties$QuickRefID.y, ignore.case = TRUE),]
tmp_800_n_lbj = properties[grepl('treehouse apts', properties$SitusLocation, ignore.case = TRUE),]
merged_800_n_lbj = tmp_800_n_lbj[1,]
merged_800_n_lbj$CurrMarketValue = sum(tmp_800_n_lbj$CurrMarketValue)
merged_800_n_lbj$Situs = "800 N LBJ DR, SAN MARCOS, TX 78666"
properties = properties[!grepl('treehouse apts', properties$SitusLocation, ignore.case = TRUE),]
properties = rbind(properties, merged_800_n_lbj)
properties[grepl('treehouse apts', properties$SitusLocation, ignore.case = TRUE),]$CurrMarketValue = properties[grepl('treehouse apts', properties$SitusLocation, ignore.case = TRUE),]$CurrMarketValue + properties[properties$PropertyID == 84811,]$CurrMarketValue
properties = properties[properties$PropertyID != 84811,]
properties[grepl('1506 S IH 35', properties$Situs, ignore.case = TRUE),]$CurrMarketValue = properties[grepl('1506 S IH 35', properties$Situs, ignore.case = TRUE),]$CurrMarketValue + properties[properties$PropertyID == 118256,]$CurrMarketValue
properties = properties[properties$PropertyID != 118256,]
### Zeta Tau Alpha sorority
properties = properties[!grepl('102 MOSSCLIFF CIR', properties$Situs, ignore.case = TRUE),]
### No improvements on land
properties = properties[!grepl('1408 MARLETON ST', properties$Situs, ignore.case = TRUE),]
### Alpha Zeta sorority?
properties = properties[!grepl('428 W HUTCHISON ST', properties$Situs, ignore.case = TRUE),]
### Vacant lot?
properties = properties[!grepl('745 RIVER RD', properties$Situs, ignore.case = TRUE),]
properties[grepl('1271 SADLER', properties$Situs, ignore.case = TRUE),]$SitusLocation = "SADLER HOUSE APARTMENTS"
properties[grepl('1271 SADLER', properties$Situs, ignore.case = TRUE),]$Situs = "1271 SADLER DR, SAN MARCOS, TX 78666"
properties[grepl('417 N COMANCHE ST', properties$Situs, ignore.case = TRUE),]$SitusLocation = "POINTE SAN MARCOS"
properties[grepl('755 RIVER RD', properties$Situs, ignore.case = TRUE),]$SitusLocation = "RIVER ROAD APARTMENTS"
properties = properties[,c("QuickRefID.x","Situs","SitusLocation","PropertyID","PropertyNumber.x","Description","StateCode","CurrMarketValue")]
properties = properties[grepl("^.* 78666", properties$Situs),]
properties_no_address = properties[is.na(properties$Situs),]
properties = properties[!is.na(properties$Situs),]
library("ggmap")
register_google("AIzaSyB0TJpE_2VnVyteAo8NC1MjZT9g-1jdPFI ")
unique_addresses = unique(properties$Situs)
unique_lat_lon = geocode(unique_addresses)
addresses_lon_lat = as.data.frame(cbind(unique_addresses, unique_lat_lon$lon, unique_lat_lon$lat))
colnames(addresses_lon_lat) = c("address","lon","lat")
addresses_lon_lat$address = as.character(addresses_lon_lat$address)
addresses_lon_lat$lon = as.numeric(as.character(addresses_lon_lat$lon))
addresses_lon_lat$lat = as.numeric(as.character(addresses_lon_lat$lat))
properties = merge(properties, addresses_lon_lat, by.y ="address", by.x ="Situs" )
original_owners = read_csv(import_file_owners)
owners_properties = merge(properties, original_owners, by.x = "PropertyNumber.x", by.y = "PropertyNumber", all.x = TRUE, no.dups = FALSE )
owners_properties = unique(owners_properties)
owners_properties[grepl("1701 MILL ST",owners_properties$Situs, ignore.case = TRUE),]$OwnerName = "COPPER BEECH TOWNHOME COMMUNITIES"
owners_properties[grepl("1701 MILL ST",owners_properties$Situs, ignore.case = TRUE),]$SitusLocation = "COPPER BEECH"
library(dplyr)
multiple_owners_multiple_properties = owners_properties %>% group_by(Situs) %>% filter (n() > 1)
multiple_owners_flag = FALSE
if ( length(unique(multiple_owners_multiple_properties$OwnerName)) != length(unique(multiple_owners_multiple_properties$Situs)) ) {
multiple_owners_flag = TRUE
}
owners_properties = owners_properties %>% group_by(Situs) %>% summarise(
ref_id = first(QuickRefID.x),
SitusLocation = first(SitusLocation),
CurrMarketValue = sum(CurrMarketValue),
lon = first(lon),
lat = first(lat),
OwnerName = first(OwnerName),
Address1 = first(Address1),
Address2 = first(Address2),
Address3 = first(Address3),
City = first(City),
State = first(State),
Zip = first(Zip),
OwnershipPercent = first(OwnershipPercent)
)
properties_export = owners_properties[,c("Situs","SitusLocation","lon","lat","CurrMarketValue", "OwnerName", "Address1","Address2","Address3","City","State","Zip","OwnershipPercent")]
properties_export$year = year
colnames(properties_export) = c("address_canonical","property_name","longitude","latitude","value","owner_name","owner_address_1","owner_address_2","owner_address_3","owner_city","owner_state","owner_zip","ownership_percent","year")
properties_export = properties_export[!is.na(properties_export$latitude),]
properties_filename = paste(year,"_properties_export_",as.Date(Sys.Date()),".csv",collapse="", sep="")
write.csv(properties_export, properties_filename, row.names = FALSE)
unique_addresses = unique(unique_addresses)
unique_addresses_simple = unlist(lapply(unique_addresses, function(x) { unlist(strsplit(x, ",", fixed=TRUE))[1] }))
unique_address_filename = paste(year,"_unique_property_addresses",as.Date(Sys.Date()),".csv",collapse="", sep="")
unique_addresses = cbind(unique_addresses, unique_addresses_simple)
colnames(unique_addresses) = c("address_full","address_simple")
write.csv(unique_addresses, unique_address_filename, row.names = FALSE)
sample_filename = paste(year,"sample_50",as.Date(Sys.Date()),".csv",collapse="", sep="")
for_sample = owners_properties[owners_properties$CurrMarketValue >= 1000000,]
write.csv( for_sample[sample(nrow(for_sample), 50),], sample_filename, row.names = FALSE)
properties = properties[!grepl('R21257', properties$QuickRefID.y, ignore.case = TRUE),]
knitr::opts_chunk$set(cache = TRUE)
library("tidyverse")
library("readxl")
import_file_land = "2019_PropertyDataExport735288.txt"
import_file_properties = "2019_PropertyDataExport735286.txt"
import_file_owners = "2019_PropertyDataExport735287.txt"
year = "2019"
original_land = read_csv(import_file_land)
original_properties = read_csv(import_file_properties)
original_state_b1 = original_land[original_land$StateCode == "B1",]
original_land_b1 = original_land[original_land$LandType == "B1",]
original_land_b1 = unique(rbind(original_state_b1, original_land_b1))
properties = merge(original_land_b1, original_properties, by.x = "PropertyID", by.y = "PropertyID")
tmp_705_w_river_rd = properties[grepl('705 w river rd', properties$Situs, ignore.case = TRUE),]
merged_705_w_river_rd = tmp_705_w_river_rd[1,]
merged_705_w_river_rd$CurrMarketValue = sum(tmp_705_w_river_rd$CurrMarketValue)
properties = properties[!grepl('705 w river rd', properties$Situs, ignore.case = TRUE),]
properties = rbind(properties, merged_705_w_river_rd)
properties = properties[!grepl('R93286', properties$QuickRefID.y, ignore.case = TRUE),]
properties = properties[!grepl('R93223', properties$QuickRefID.y, ignore.case = TRUE),]
properties = properties[!grepl('R21257', properties$QuickRefID.y, ignore.case = TRUE),]
knitr::opts_chunk$set(cache = TRUE)
library("tidyverse")
library("readxl")
import_file_land = "2019_PropertyDataExport735288.txt"
import_file_properties = "2019_PropertyDataExport735286.txt"
import_file_owners = "2019_PropertyDataExport735287.txt"
year = "2019"
original_land = read_csv(import_file_land)
original_properties = read_csv(import_file_properties)
original_state_b1 = original_land[original_land$StateCode == "B1",]
original_land_b1 = original_land[original_land$LandType == "B1",]
original_land_b1 = unique(rbind(original_state_b1, original_land_b1))
properties = merge(original_land_b1, original_properties, by.x = "PropertyID", by.y = "PropertyID")
tmp_705_w_river_rd = properties[grepl('705 w river rd', properties$Situs, ignore.case = TRUE),]
merged_705_w_river_rd = tmp_705_w_river_rd[1,]
merged_705_w_river_rd$CurrMarketValue = sum(tmp_705_w_river_rd$CurrMarketValue)
properties = properties[!grepl('705 w river rd', properties$Situs, ignore.case = TRUE),]
properties = rbind(properties, merged_705_w_river_rd)
properties = properties[!grepl('R93286', properties$QuickRefID.y, ignore.case = TRUE),]
properties = properties[!grepl('R93223', properties$QuickRefID.y, ignore.case = TRUE),]
properties = properties[!grepl('R21257', properties$QuickRefID.y, ignore.case = TRUE),]
tmp_800_n_lbj = properties[grepl('treehouse apts', properties$SitusLocation, ignore.case = TRUE),]
merged_800_n_lbj = tmp_800_n_lbj[1,]
merged_800_n_lbj$CurrMarketValue = sum(tmp_800_n_lbj$CurrMarketValue)
merged_800_n_lbj$Situs = "800 N LBJ DR, SAN MARCOS, TX 78666"
properties = properties[!grepl('treehouse apts', properties$SitusLocation, ignore.case = TRUE),]
properties = rbind(properties, merged_800_n_lbj)
properties[grepl('treehouse apts', properties$SitusLocation, ignore.case = TRUE),]$CurrMarketValue = properties[grepl('treehouse apts', properties$SitusLocation, ignore.case = TRUE),]$CurrMarketValue + properties[properties$PropertyID == 84811,]$CurrMarketValue
properties = properties[properties$PropertyID != 84811,]
properties[grepl('1506 S IH 35', properties$Situs, ignore.case = TRUE),]$CurrMarketValue = properties[grepl('1506 S IH 35', properties$Situs, ignore.case = TRUE),]$CurrMarketValue + properties[properties$PropertyID == 118256,]$CurrMarketValue
properties = properties[properties$PropertyID != 118256,]
### Zeta Tau Alpha sorority
properties = properties[!grepl('102 MOSSCLIFF CIR', properties$Situs, ignore.case = TRUE),]
### No improvements on land
properties = properties[!grepl('1408 MARLETON ST', properties$Situs, ignore.case = TRUE),]
### Alpha Zeta sorority?
properties = properties[!grepl('428 W HUTCHISON ST', properties$Situs, ignore.case = TRUE),]
### Vacant lot?
properties = properties[!grepl('745 RIVER RD', properties$Situs, ignore.case = TRUE),]
properties[grepl('1271 SADLER', properties$Situs, ignore.case = TRUE),]$SitusLocation = "SADLER HOUSE APARTMENTS"
properties[grepl('1271 SADLER', properties$Situs, ignore.case = TRUE),]$Situs = "1271 SADLER DR, SAN MARCOS, TX 78666"
properties[grepl('417 N COMANCHE ST', properties$Situs, ignore.case = TRUE),]$SitusLocation = "POINTE SAN MARCOS"
properties[grepl('755 RIVER RD', properties$Situs, ignore.case = TRUE),]$SitusLocation = "RIVER ROAD APARTMENTS"
properties = properties[,c("QuickRefID.x","Situs","SitusLocation","PropertyID","PropertyNumber.x","Description","StateCode","CurrMarketValue")]
properties = properties[grepl("^.* 78666", properties$Situs),]
properties_no_address = properties[is.na(properties$Situs),]
properties = properties[!is.na(properties$Situs),]
library("ggmap")
register_google("AIzaSyB0TJpE_2VnVyteAo8NC1MjZT9g-1jdPFI ")
unique_addresses = unique(properties$Situs)
unique_lat_lon = geocode(unique_addresses)
addresses_lon_lat = as.data.frame(cbind(unique_addresses, unique_lat_lon$lon, unique_lat_lon$lat))
colnames(addresses_lon_lat) = c("address","lon","lat")
addresses_lon_lat$address = as.character(addresses_lon_lat$address)
addresses_lon_lat$lon = as.numeric(as.character(addresses_lon_lat$lon))
addresses_lon_lat$lat = as.numeric(as.character(addresses_lon_lat$lat))
properties = merge(properties, addresses_lon_lat, by.y ="address", by.x ="Situs" )
original_owners = read_csv(import_file_owners)
owners_properties = merge(properties, original_owners, by.x = "PropertyNumber.x", by.y = "PropertyNumber", all.x = TRUE, no.dups = FALSE )
owners_properties = unique(owners_properties)
owners_properties[grepl("1701 MILL ST",owners_properties$Situs, ignore.case = TRUE),]$OwnerName = "COPPER BEECH TOWNHOME COMMUNITIES"
owners_properties[grepl("1701 MILL ST",owners_properties$Situs, ignore.case = TRUE),]$SitusLocation = "COPPER BEECH"
library(dplyr)
multiple_owners_multiple_properties = owners_properties %>% group_by(Situs) %>% filter (n() > 1)
multiple_owners_flag = FALSE
if ( length(unique(multiple_owners_multiple_properties$OwnerName)) != length(unique(multiple_owners_multiple_properties$Situs)) ) {
multiple_owners_flag = TRUE
}
owners_properties = owners_properties %>% group_by(Situs) %>% summarise(
ref_id = first(QuickRefID.x),
SitusLocation = first(SitusLocation),
CurrMarketValue = sum(CurrMarketValue),
lon = first(lon),
lat = first(lat),
OwnerName = first(OwnerName),
Address1 = first(Address1),
Address2 = first(Address2),
Address3 = first(Address3),
City = first(City),
State = first(State),
Zip = first(Zip),
OwnershipPercent = first(OwnershipPercent)
)
properties_export = owners_properties[,c("Situs","SitusLocation","lon","lat","CurrMarketValue", "OwnerName", "Address1","Address2","Address3","City","State","Zip","OwnershipPercent")]
properties_export$year = year
colnames(properties_export) = c("address_canonical","property_name","longitude","latitude","value","owner_name","owner_address_1","owner_address_2","owner_address_3","owner_city","owner_state","owner_zip","ownership_percent","year")
properties_export = properties_export[!is.na(properties_export$latitude),]
properties_filename = paste(year,"_properties_export_",as.Date(Sys.Date()),".csv",collapse="", sep="")
write.csv(properties_export, properties_filename, row.names = FALSE)
unique_addresses = unique(unique_addresses)
unique_addresses_simple = unlist(lapply(unique_addresses, function(x) { unlist(strsplit(x, ",", fixed=TRUE))[1] }))
unique_address_filename = paste(year,"_unique_property_addresses",as.Date(Sys.Date()),".csv",collapse="", sep="")
unique_addresses = cbind(unique_addresses, unique_addresses_simple)
colnames(unique_addresses) = c("address_full","address_simple")
write.csv(unique_addresses, unique_address_filename, row.names = FALSE)
sample_filename = paste(year,"sample_50",as.Date(Sys.Date()),".csv",collapse="", sep="")
for_sample = owners_properties[owners_properties$CurrMarketValue >= 1000000,]
write.csv( for_sample[sample(nrow(for_sample), 50),], sample_filename, row.names = FALSE)
sample_filename = paste(year,"sample_50_",as.Date(Sys.Date()),".csv",collapse="", sep="")
for_sample = owners_properties[owners_properties$CurrMarketValue >= 1000000,]
write.csv( for_sample[sample(nrow(for_sample), 50),], sample_filename, row.names = FALSE)
sample_filename = paste(year,"_sample_50_",as.Date(Sys.Date()),".csv",collapse="", sep="")
for_sample = owners_properties[owners_properties$CurrMarketValue >= 1000000,]
write.csv( for_sample[sample(nrow(for_sample), 50),], sample_filename, row.names = FALSE)
